{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./node_modules/denque/index.js","webpack://[name]/./node_modules/heap/index.js","webpack://[name]/./node_modules/heap/lib/heap.js","webpack://[name]/./src/PathFinding/algorithms/AStar.js","webpack://[name]/./src/PathFinding/algorithms/BestFirstSearch.js","webpack://[name]/./src/PathFinding/algorithms/BreadthFirstSearch.js","webpack://[name]/./src/PathFinding/algorithms/Dijkshtra.js","webpack://[name]/./src/PathFinding/core/GraphNode.js","webpack://[name]/./src/PathFinding/core/Grid.js","webpack://[name]/./src/PathFinding/index.js","webpack://[name]/./src/PathFinding/utils/BackTrace.js","webpack://[name]/./src/PathFinding/utils/Heuristics.js"],"names":["AStar","options","console","log","allowDiagonal","biDirectional","doNotCrossCornersBetweenObstacles","markCurrentProcessingNode","heuristic","heuristics","findPath","findBiPath","currentProcessingNode","neighbour","Math","abs","x","y","SQRT2","grid","minHeap","Heap","node1","node2","f","startNode","getNodeAtXY","startPoint","endNode","endPoint","neighbours","neighbourGValFromCurrentProcessingNode","g","insert","addedToHeap","empty","pop","currentNode","backTrace","getNeighbours","forEach","visited","getDistanceFromCurrentProcessignNode","h","parent","updateItem","BestFirstSearch","heuristicToOverride","BreadthFirstSearch","queue","Denque","addedToQueue","isEmpty","shift","doNotCrossCorners","push","neighboursStart","neighboursEnd","startqueue","endqueue","by","length","biBackTrace","Dijkshtra","GraphNode","Grid","rows","columns","Array","isWall","isXYWallElement","makeXYWall","node","a","b","c","d","BackTrace","path","reverse","path1","path2","concat","sqrt","max","min","Heuristic","nodeA","nodeB","weight","dx","dy"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC,eAAe,gBAAgB;AAC/B,GAAG;AACH,wBAAwB,gBAAgB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;ACpbA,iBAAiB,mBAAO,CAAC,mDAAY;;;;;;;;;;;;ACArC;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mCAAmC,0BAA0B,oBAAoB;AACvI;AACA,KAAK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","file":"PathFinder.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/PathFinding/index.js\");\n","'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array) {\n  this._head = 0;\n  this._tail = 0;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * -------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peakAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (item === undefined) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (item === undefined) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = ( i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length *= 2;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n","module.exports = require('./lib/heap');\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","import Heap from 'heap';\r\nimport backTrace from '../utils/BackTrace';\r\nimport heuristics from '../utils/Heuristics';\r\n\r\nexport default class AStar{\r\n\tconstructor(options){\r\n\t\tconsole.log(options);\r\n\t\tthis.allowDiagonal = options.allowDiagonal;\r\n\t\tthis.biDirectional = options.biDirectional;\r\n\t\tthis.doNotCrossCornersBetweenObstacles = options.doNotCrossCornersBetweenObstacles;\r\n\t\tthis.markCurrentProcessingNode = options.markCurrentProcessingNode;\r\n\r\n\t\tthis.heuristic = heuristics[options.heuristic];\r\n\t\tif(this.biDirectional){\r\n\t\t\tthis.findPath = this.findBiPath;\r\n\t\t}\r\n\t}\r\n\r\n\tgetDistanceFromCurrentProcessignNode(currentProcessingNode, neighbour){\r\n\t\tif((Math.abs(currentProcessingNode.x-neighbour.x)+Math.abs(currentProcessingNode.y-neighbour.y))===1){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn Math.SQRT2;\r\n\t}\r\n\r\n\tfindPath(grid){\r\n\t\tlet minHeap = new Heap((node1, node2) => node1.f-node2.f), \r\n\t\t\tstartNode = grid.getNodeAtXY(grid.startPoint.x, grid.startPoint.y), \r\n\t\t\tendNode = grid.getNodeAtXY(grid.endPoint.x, grid.endPoint.y), \r\n\t\t\tcurrentProcessingNode, \r\n\t\t\tneighbours, \r\n\t\t\tneighbourGValFromCurrentProcessingNode;\r\n\t\t\r\n\t\tstartNode.f = 0;\r\n\t\tstartNode.g = 0;\r\n\r\n\t\tminHeap.insert(startNode);\r\n\t\tstartNode.addedToHeap = true;\r\n\r\n\t\twhile(!minHeap.empty()){\r\n\t\t\tcurrentProcessingNode = minHeap.pop();\r\n\t\t\tif(this.markCurrentProcessingNode) currentProcessingNode.currentNode = true;\r\n\r\n\t\t\tif(currentProcessingNode === endNode){\r\n\t\t\t\treturn backTrace.backTrace(currentProcessingNode, startNode);\r\n\t\t\t}\r\n\r\n\t\t\tneighbours = grid.getNeighbours(currentProcessingNode, this.allowDiagonal, this.doNotCrossCornersBetweenObstacles);\r\n\r\n\t\t\tneighbours.forEach(neighbour => {\r\n\t\t\t\tif(neighbour.visited) return; //equivalent to continue in forEach\r\n\t\t\t\t\r\n\t\t\t\tneighbourGValFromCurrentProcessingNode = currentProcessingNode.g+this.getDistanceFromCurrentProcessignNode(currentProcessingNode, neighbour);\r\n\r\n\t\t\t\tif(!neighbour.addedToHeap){\r\n\t\t\t\t\tneighbour.g = neighbourGValFromCurrentProcessingNode;\r\n\t\t\t\t\tneighbour.h = this.heuristic(endNode, neighbour);\r\n\t\t\t\t\tneighbour.f = neighbour.g+neighbour.h;\r\n\r\n\t\t\t\t\tminHeap.insert(neighbour);\r\n\t\t\t\t\tneighbour.addedToHeap = true;\r\n\t\t\t\t\tneighbour.parent = currentProcessingNode;\r\n\r\n\t\t\t\t} else if(neighbour.g > neighbourGValFromCurrentProcessingNode){\r\n\t\t\t\t\tneighbour.g = neighbourGValFromCurrentProcessingNode;\r\n\t\t\t\t\tneighbour.h = this.heuristic(endNode, neighbour);\r\n\t\t\t\t\tneighbour.f = neighbour.g+neighbour.h;\r\n\r\n\t\t\t\t\tminHeap.updateItem(neighbour);\r\n\t\t\t\t\tneighbour.parent = currentProcessingNode;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcurrentProcessingNode.visited = true;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\tfindBiPath(grid){\r\n\t\tconsole.log(grid);\r\n\t}\r\n}\r\n","import AStar from './AStar';\r\n\r\nexport default class BestFirstSearch extends AStar{\r\n\tconstructor(options){\r\n\t\tsuper(options);\r\n\r\n\t\tlet heuristicToOverride = this.heuristic;\r\n\r\n\t\tthis.heuristic = (node1, node2) => {\r\n\t\t\treturn heuristicToOverride(node1, node2, 500000);\r\n\t\t};\r\n\t}\r\n}\r\n","import Denque from 'denque';\r\nimport backTrace from '../utils/BackTrace';\r\n\r\nexport default class BreadthFirstSearch{\r\n\tconstructor(options){\r\n\t\tconsole.log(options);\r\n\t\tthis.allowDiagonal = options.allowDiagonal;\r\n\t\tthis.biDirectional = options.biDirectional;\r\n\t\tthis.doNotCrossCornersBetweenObstacles = options.doNotCrossCornersBetweenObstacles;\r\n\t\tthis.markCurrentProcessingNode = options.markCurrentProcessingNode;\r\n\t\tif(this.biDirectional){\r\n\t\t\tthis.findPath = this.findBiPath;\r\n\t\t}\r\n\t}\r\n\tfindPath(grid){\r\n\t\tlet startPoint = grid.startPoint, \r\n\t\t\tendPoint = grid.endPoint, \r\n\t\t\tstartNode = grid[startPoint.y][startPoint.x], \r\n\t\t\tendNode = grid[endPoint.y][endPoint.x];\r\n\r\n\t\tlet queue = new Denque([startNode]), \r\n\t\t\tneighbours = [], \r\n\t\t\tcurrentProcessingNode;\r\n\t\tstartNode.addedToQueue = true;\r\n\t\twhile(!queue.isEmpty()){\r\n\t\t\tcurrentProcessingNode = queue.shift(); // Dequeue operation on queue\r\n\t\t\tif(this.markCurrentProcessingNode) currentProcessingNode.currentNode = true;\r\n\t\t\tcurrentProcessingNode.visited = true;\r\n\r\n\t\t\tif(currentProcessingNode === endNode){\r\n\t\t\t\treturn backTrace.backTrace(endNode, startNode);}\r\n\t\t\tneighbours = grid.getNeighbours(currentProcessingNode,this.allowDiagonal,this.doNotCrossCorners);\r\n\t\t\tneighbours.forEach(neighbour => {\r\n\t\t\t\tif(neighbour.visited || neighbour.addedToQueue){\r\n\t\t\t\t\treturn; // equivalent to CONTINUE in forEach\r\n\t\t\t\t}\r\n\t\t\t\tqueue.push(neighbour);\r\n\t\t\t\tneighbour.addedToQueue = true;\r\n\t\t\t\tneighbour.parent = currentProcessingNode;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\t\r\n\t\treturn [];\r\n\t}\r\n\r\n\tfindBiPath(grid){\r\n\t\tlet startNode = grid.getNodeAtXY(grid.startPoint.x, grid.startPoint.y), \r\n\t\t\tendNode = grid.getNodeAtXY(grid.endPoint.x, grid.endPoint.y), \r\n\t\t\tneighbour,\r\n\t\t\tcurrentProcessingNode,\r\n\t\t\tneighboursStart = [],\r\n\t\t\tneighboursEnd = [];\r\n\r\n\t\tlet startqueue = new Denque([startNode]),\r\n\t\t\tendqueue = new Denque([endNode]);\r\n\t\t\t\r\n\t\tstartNode.addedToQueue = true;\r\n\t\tendNode.addedToQueue = true;\r\n\t\tstartNode.by = 'start';\r\n\t\tendNode.by = 'end';\r\n\r\n\t\twhile(!startqueue.isEmpty() && !endqueue.isEmpty()){\r\n\t\t\tcurrentProcessingNode = startqueue.shift();\r\n\t\t\tif(this.markCurrentProcessingNode) currentProcessingNode.currentNode = true;\r\n\t\t\tcurrentProcessingNode.visited = true;\r\n\t\t\tneighboursStart = grid.getNeighbours(currentProcessingNode, this.allowDiagonal, this.doNotCrossCornersBetweenObstacles);\r\n\t\t\r\n\t\t\twhile(neighboursStart.length){\r\n\t\t\t\tneighbour = neighboursStart.shift();\r\n\t\t\t\tif(neighbour.visited){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(neighbour.addedToQueue){\r\n\t\t\t\t\tif(neighbour.by === 'end'){\r\n\t\t\t\t\t\treturn backTrace.biBackTrace(currentProcessingNode,startNode,neighbour,endNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tstartqueue.push(neighbour);\r\n\t\t\t\tneighbour.parent = currentProcessingNode;\r\n\t\t\t\tneighbour.by = 'start';\r\n\t\t\t\tneighbour.addedToQueue = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcurrentProcessingNode = endqueue.shift();\r\n\t\t\tif(this.markCurrentProcessingNode) currentProcessingNode.currentNode = true;\r\n\t\t\tcurrentProcessingNode.visited = true;\r\n\t\t\tneighboursEnd = grid.getNeighbours(currentProcessingNode, this.allowDiagonal, this.doNotCrossCornersBetweenObstacles);\r\n\r\n\t\t\twhile(neighboursEnd.length){\r\n\t\t\t\tneighbour = neighboursEnd.shift();\r\n\t\t\t\tif(neighbour.visited){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(neighbour.addedToQueue){\r\n\t\t\t\t\tif(neighbour.by === 'start'){\r\n\t\t\t\t\t\treturn backTrace.biBackTrace(neighbour,startNode,currentProcessingNode,endNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tendqueue.push(neighbour);\r\n\t\t\t\tneighbour.addedToQueue = true;\r\n\t\t\t\tneighbour.parent=currentProcessingNode;\r\n\t\t\t\tneighbour.by='end';\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [];\t\t\r\n\t}\r\n}\t\r\n\t\r\n","import AStar from './AStar';\r\n\r\nexport default class Dijkshtra extends AStar{\r\n\tconstructor(options){\r\n\t\tsuper(options);\r\n\r\n\t\tthis.heuristic = () => {\r\n\t\t\treturn 0;\r\n\t\t};\r\n\t}\r\n}\r\n","class GraphNode{\r\n\tconstructor(options){\r\n\t\tthis.x = options.x;\r\n\t\tthis.y = options.y;\r\n\t}\r\n}\r\n\r\nexport default GraphNode;\r\n","import GraphNode from './GraphNode';\r\n\r\nclass Grid{\r\n\tconstructor(options){\r\n\t\tthis.rows = options.rows;\r\n\t\tthis.columns = options.columns;\r\n\t\tthis.startPoint = options.startPoint;\r\n\t\tthis.endPoint = options.endPoint;\r\n\r\n\t\tfor(let y=0; y<this.rows; y++){\r\n\t\t\tthis[y] = new Array(this.columns);\r\n\t\t\tfor(let x=0; x<this.columns; x++){\r\n\t\t\t\tthis[y][x] = new GraphNode({x, y});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisXYWallElement(x, y){\r\n\t\tif(x<0 || x>=this.columns || y<0 || y>=this.rows) return true;\r\n\t\treturn (this[y][x].isWall?true:false);\r\n\t}\r\n\r\n\tmakeXYWall(x, y){\r\n\t\tthis[y][x].isWall = true;\r\n\t}\r\n\r\n\tdestroyWallAtXY(x, y){\r\n\t\tthis[y][x].isWall = false;\r\n\t}\r\n\r\n\tisXYStartPoint(x, y){\r\n\t\treturn ((this.startPoint.x === x )&&(this.startPoint.y === y));\r\n\t}\r\n\r\n\tisXYEndPoint(x, y){\r\n\t\treturn ((this.endPoint.x === x )&&(this.endPoint.y === y));\r\n\t}\r\n\r\n\tgetNodeAtXY(x, y){\r\n\t\treturn this[y][x];\r\n\t}\r\n\r\n\tclone(){\r\n\t\tlet grid = new Grid(this);\r\n\r\n\t\tfor(let y=0; y<this.rows; y++){\r\n\t\t\tgrid[y] = new Array(this.columns);\r\n\t\t\tfor(let x=0; x<this.columns; x++){\r\n\t\t\t\tgrid[y][x] = new GraphNode({x, y});\r\n\t\t\t\tif(this.isXYWallElement(x, y)) grid.makeXYWall(x, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn grid;\r\n\t}\r\n\r\n\t/*\r\n\t\t|_ _|_a_|_ _| |_p_|_ _|_q_| \r\n\t\t|_d_|_*_|_b_| |_ _|_*_|_ _|\r\n\t\t|_ _|_c_|_ _| |_s_|_ _|_r_|\r\n\t */\r\n\tgetNeighbours(node, allowDiagonal, doNotCrossCornersBetweenObstacles){\r\n\t\tlet neighbours = [];\r\n\t\tconst {x, y} = node;\r\n\t\tlet a, b, c, d;\r\n\t\t\r\n\t\t// a\r\n\t\tif(!this.isXYWallElement(x, y-1)) {\r\n\t\t\tneighbours.push(this.getNodeAtXY(x, y-1));\r\n\t\t\ta = true;\r\n\t\t}\r\n\t\t// b\r\n\t\tif(!this.isXYWallElement(x+1, y)) {\r\n\t\t\tneighbours.push(this.getNodeAtXY(x+1, y));\r\n\t\t\tb = true;\r\n\t\t}\r\n\t\t// c\r\n\t\tif(!this.isXYWallElement(x, y+1)) {\r\n\t\t\tneighbours.push(this.getNodeAtXY(x, y+1));\r\n\t\t\tc = true;\r\n\t\t}\r\n\t\t// d\r\n\t\tif(!this.isXYWallElement(x-1, y)) {\r\n\t\t\tneighbours.push(this.getNodeAtXY(x-1, y));\r\n\t\t\td = true;\r\n\t\t}\r\n\r\n\t\tif(allowDiagonal){\r\n\t\t\tif(doNotCrossCornersBetweenObstacles){\r\n\t\t\t\t//p\r\n\t\t\t\tif( (a || d) & !this.isXYWallElement(x-1, y-1)) {\r\n\t\t\t\t\tneighbours.push(this.getNodeAtXY(x-1, y-1));\r\n\t\t\t\t}\r\n\t\t\t\t//q\r\n\t\t\t\tif( (a || b) & !this.isXYWallElement(x+1, y-1)) {\r\n\t\t\t\t\tneighbours.push(this.getNodeAtXY(x+1, y-1));\r\n\t\t\t\t}\r\n\t\t\t\t//r\r\n\t\t\t\tif( (b || c) & !this.isXYWallElement(x+1, y+1)) {\r\n\t\t\t\t\tneighbours.push(this.getNodeAtXY(x+1, y+1));\r\n\t\t\t\t}\r\n\t\t\t\t//s\r\n\t\t\t\tif( (c || d) & !this.isXYWallElement(x-1, y+1)) {\r\n\t\t\t\t\tneighbours.push(this.getNodeAtXY(x-1, y+1));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//p\r\n\t\t\t\tif(!this.isXYWallElement(x-1, y-1)) {\r\n\t\t\t\t\tneighbours.push(this.getNodeAtXY(x-1, y-1));\r\n\t\t\t\t}\r\n\t\t\t\t//q\r\n\t\t\t\tif(!this.isXYWallElement(x+1, y-1)) {\r\n\t\t\t\t\tneighbours.push(this.getNodeAtXY(x+1, y-1));\r\n\t\t\t\t}\r\n\t\t\t\t//r\r\n\t\t\t\tif(!this.isXYWallElement(x+1, y+1)) {\r\n\t\t\t\t\tneighbours.push(this.getNodeAtXY(x+1, y+1));\r\n\t\t\t\t}\r\n\t\t\t\t//s\r\n\t\t\t\tif(!this.isXYWallElement(x-1, y+1)) {\r\n\t\t\t\t\tneighbours.push(this.getNodeAtXY(x-1, y+1));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn neighbours;\r\n\t}\r\n}\r\n\r\nexport default Grid;\r\n","import Grid from './core/Grid';\r\nimport GraphNode from './core/GraphNode';\r\nimport BreadthFirstSearch from './algorithms/BreadthFirstSearch';\r\nimport AStar from './algorithms/AStar';\r\nimport Dijkshtra from './algorithms/Dijkshtra';\r\nimport BestFirstSearch from './algorithms/BestFirstSearch';\r\n\r\nexport default {\r\n\tGrid, \r\n\tGraphNode, \r\n\tBreadthFirstSearch, \r\n\tAStar, \r\n\tDijkshtra, \r\n\tBestFirstSearch\r\n};\r\n","class BackTrace{\r\n\tbackTrace(node, startNode){\r\n\t\tlet path = [];\r\n\t\twhile(node !== startNode){\r\n\t\t\tpath.push(node);\r\n\t\t\tnode = node.parent;\r\n\t\t}\r\n\t\tpath.reverse();\r\n\t\treturn path;\r\n\t}\r\n\tbiBackTrace(node1,startNode,node2,endNode){\r\n\t\tlet path1 = this.backTrace(node1,startNode),\r\n\t\t\tpath2 = this.backTrace(node2,endNode);\r\n\t\tpath2 = path2.reverse();\r\n\t\tlet path = path1.concat(path2);\r\n\t\treturn path;\r\n\t}\r\n}\r\n\r\nexport default new BackTrace();\r\n","let abs = Math.abs, \r\n\tsqrt = Math.sqrt, \r\n\tmax = Math.max, \r\n\tmin = Math.min;\r\n\r\nclass Heuristic{\r\n\r\n\tmanhattan(nodeA, nodeB, weight=1){\r\n\t\tlet dx = abs(nodeA.x-nodeB.x);\r\n\t\tlet dy = abs(nodeA.y-nodeB.y);\r\n\t\treturn weight*(dx+dy);\r\n\t}\r\n\r\n\teuclidean(nodeA, nodeB, weight=1){\r\n\t\tlet dx = abs(nodeA.x-nodeB.x);\r\n\t\tlet dy = abs(nodeA.y-nodeB.y);\r\n\t\treturn weight*sqrt(dx*dx + dy*dy);\r\n\t}\r\n\r\n\toctile(nodeA, nodeB, weight=1){\r\n\t\tlet dx = abs(nodeA.x-nodeB.x);\r\n\t\tlet dy = abs(nodeA.y-nodeB.y);\r\n\t\treturn weight*(max(dx, dy)+(sqrt(2)-1)*min(dx, dy));\r\n\t}\r\n\r\n\tchebyshev(nodeA, nodeB, weight=1){\r\n\t\tlet dx = abs(nodeA.x-nodeB.x);\r\n\t\tlet dy = abs(nodeA.y-nodeB.y);\r\n\t\treturn weight*(max(dx, dy));\r\n\t}\r\n}\r\n\r\nexport default new Heuristic();\r\n"],"sourceRoot":""}