{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./node_modules/denque/index.js","webpack://[name]/./src/PathFinding/algorithms/BreadthFirstSearch.js","webpack://[name]/./src/PathFinding/core/GraphNode.js","webpack://[name]/./src/PathFinding/core/Grid.js","webpack://[name]/./src/PathFinding/index.js"],"names":["BreadthFirstSearch","opts","console","log","node","startNode","path","push","parent","grid","startPoint","endPoint","y","x","endNode","queue","Denque","neighbours","currentProcessingNode","addedToQueue","isEmpty","shift","visited","backTrace","getNeighbours","forEach","neighbour","GraphNode","options","Grid","rows","columns","Array","isWall","isXYWallElement","makeXYWall","a","b","c","d"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA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","file":"PathFinder.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/PathFinding/index.js\");\n","'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array) {\n  this._head = 0;\n  this._tail = 0;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * -------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peakAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (item === undefined) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (item === undefined) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = ( i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length *= 2;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n","import Denque from 'denque';\n\nexport default class BreadthFirstSearch{\n\tconstructor(opts){\n\t\tconsole.log(opts);\n\t}\n\n\tbackTrace(node, startNode){\n\t\tlet path = [];\n\t\twhile(node !== startNode){\n\t\t\tpath.push(node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\tconsole.log(path);\n\t\treturn path;\n\t}\n\n\tfindPath(grid){\n\t\tlet startPoint = grid.startPoint, \n\t\t\tendPoint = grid.endPoint, \n\t\t\tstartNode = grid[startPoint.y][startPoint.x], \n\t\t\tendNode = grid[endPoint.y][endPoint.x];\n\n\t\tlet queue = new Denque([startNode]), \n\t\t\tneighbours = [], \n\t\t\tcurrentProcessingNode;\n\t\tstartNode.addedToQueue = true;\n\n\t\twhile(!queue.isEmpty()){\n\n\t\t\tcurrentProcessingNode = queue.shift();\n\t\t\tcurrentProcessingNode.visited = true;\n\n\t\t\tif(currentProcessingNode === endNode){\n\t\t\t\t// console.log(currentProcessingNode, endNode);\n\t\t\t\treturn this.backTrace(endNode, startNode);\n\t\t\t}\n\n\t\t\tneighbours = grid.getNeighbours(currentProcessingNode);\n\t\t\tneighbours.forEach(neighbour => {\n\t\t\t\tif(neighbour.visited || neighbour.addedToQueue){\n\t\t\t\t\treturn; // equivalent to CONTINUE in forEach\n\t\t\t\t}\n\t\t\t\tqueue.push(neighbour);\n\t\t\t\tneighbour.addedToQueue = true;\n\t\t\t\tneighbour.parent = currentProcessingNode;\n\t\t\t});\n\t\t}\n\n\t\treturn [];\n\t}\n}\n","class GraphNode{\n\tconstructor(options){\n\t\tthis.x = options.x;\n\t\tthis.y = options.y;\n\t}\n}\n\nexport default GraphNode;\n","import GraphNode from './GraphNode';\n\nclass Grid{\n\tconstructor(options){\n\t\tthis.rows = options.rows;\n\t\tthis.columns = options.columns;\n\t\tthis.startPoint = options.startPoint;\n\t\tthis.endPoint = options.endPoint;\n\n\t\tfor(let y=0; y<this.rows; y++){\n\t\t\tthis[y] = new Array(this.columns);\n\t\t\tfor(let x=0; x<this.columns; x++){\n\t\t\t\tthis[y][x] = new GraphNode({x, y});\n\t\t\t}\n\t\t}\n\t}\n\n\tisXYWallElement(x, y){\n\t\tif(x<0 || x>=this.columns || y<0 || y>=this.rows) return true;\n\t\treturn (this[y][x].isWall?true:false);\n\t}\n\n\tmakeXYWall(x, y){\n\t\tthis[y][x].isWall = true;\n\t}\n\n\tdestroyWallAtXY(x, y){\n\t\tthis[y][x].isWall = false;\n\t}\n\n\tisXYStartPoint(x, y){\n\t\treturn ((this.startPoint.x === x )&&(this.startPoint.y === y));\n\t}\n\n\tisXYEndPoint(x, y){\n\t\treturn ((this.endPoint.x === x )&&(this.endPoint.y === y));\n\t}\n\n\tclone(){\n\t\tlet grid = new Grid(this);\n\n\t\tfor(let y=0; y<this.rows; y++){\n\t\t\tgrid[y] = new Array(this.columns);\n\t\t\tfor(let x=0; x<this.columns; x++){\n\t\t\t\tgrid[y][x] = new GraphNode({x, y});\n\t\t\t\tif(this.isXYWallElement(x, y)) grid.makeXYWall(x, y);\n\t\t\t}\n\t\t}\n\t\treturn grid;\n\t}\n\n\t/*\n\t\t|_ _|_a_|_ _| |_p_|_ _|_q_| \n\t\t|_d_|_*_|_b_| |_ _|_*_|_ _|\n\t\t|_ _|_c_|_ _| |_s_|_ _|_r_|\n\t */\n\tgetNeighbours(node){\n\t\tlet neighbours = [];\n\t\tconst {x, y} = node;\n\t\tlet a, b, c, d;\n\n\t\t// all movable;\n\t\t\n\t\t// a\n\t\tif(!this.isXYWallElement(x, y-1)) {\n\t\t\tneighbours.push(this[y-1][x]);\n\t\t\ta = true;\n\t\t}\n\t\t// b\n\t\tif(!this.isXYWallElement(x+1, y)) {\n\t\t\tneighbours.push(this[y][x+1]);\n\t\t\tb = true;\n\t\t}\n\t\t// c\n\t\tif(!this.isXYWallElement(x, y+1)) {\n\t\t\tneighbours.push(this[y+1][x]);\n\t\t\tc = true;\n\t\t}\n\t\t// d\n\t\tif(!this.isXYWallElement(x-1, y)) {\n\t\t\tneighbours.push(this[y][x-1]);\n\t\t\td = true;\n\t\t}\n\n\t\t//p\n\t\tif( (a || d) & !this.isXYWallElement(x-1, y-1)) {\n\t\t\tneighbours.push(this[y-1][x-1]);\n\t\t}\n\t\t//q\n\t\tif( (a || b) & !this.isXYWallElement(x+1, y-1)) {\n\t\t\tneighbours.push(this[y-1][x+1]);\n\t\t}\n\t\t//r\n\t\tif( (b || c) & !this.isXYWallElement(x+1, y+1)) {\n\t\t\tneighbours.push(this[y+1][x+1]);\n\t\t}\n\t\t//s\n\t\tif( (c || d) & !this.isXYWallElement(x-1, y+1)) {\n\t\t\tneighbours.push(this[y+1][x-1]);\n\t\t}\n\t\treturn neighbours;\n\t}\n}\n\nexport default Grid;\n","import Grid from './core/Grid';\nimport GraphNode from './core/GraphNode';\nimport BreadthFirstSearch from './algorithms/BreadthFirstSearch';\n\nexport default {\n\tGrid, \n\tGraphNode, \n\tBreadthFirstSearch\n};\n"],"sourceRoot":""}